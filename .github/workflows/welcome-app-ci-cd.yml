name: Welcome App CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'apps/welcome-app/**'
      - '.github/workflows/welcome-app-ci-cd.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'apps/welcome-app/**'

env:
  CONTAINER_IMAGE: ghcr.io/${{ github.repository }}/welcome-app:${{ github.sha }}
  DOCKER_BUILDKIT: 1

defaults:
  run:
    working-directory: ./apps/welcome-app

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Run tests
      run: npm test
    
    - name: Build application
      run: npm run build

  build-and-push:
    name: Build and Push
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}/welcome-app
        tags: |
          type=sha,format=long
          type=ref,event=branch
          type=ref,event=tag
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./apps/welcome-app
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Logout of GitHub Container Registry
      if: always()
      run: docker logout ghcr.io

  deploy-staging:
    name: Deploy to Staging
    needs: build-and-push
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Install SSH key
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
    - name: Deploy to staging
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.STAGING_SSH_USER }}@${{ secrets.STAGING_HOST }} \
          "cd /path/to/staging && \
           docker-compose pull welcome-app && \
           docker-compose up -d welcome-app"

  deploy-production:
    name: Deploy to Production
    needs: build-and-push
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Install SSH key
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
    - name: Deploy to production
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.PROD_SSH_USER }}@${{ secrets.PROD_HOST }} \
          "cd /path/to/production && \
           docker-compose pull welcome-app && \
           docker-compose up -d welcome-app"
    
    - name: Verify deployment
      run: |
        curl -sSf https://your-production-url.com/health || exit 1
