version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ecommerce
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      # Application
      ENVIRONMENT: development
      DEBUG: "True"
      PYTHONPATH: /app
      SECRET_KEY: your-secret-key-here-change-this-in-production
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: "1440"
      
      # Database
      DATABASE_URL: postgresql://postgres:postgres@db:5432/ecommerce
      POSTGRES_SERVER: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ecommerce
      SQLALCHEMY_DATABASE_URI: postgresql://postgres:postgres@db:5432/ecommerce
      
      # First Superuser
      FIRST_SUPERUSER_EMAIL: admin@example.com
      FIRST_SUPERUSER_PASSWORD: admin123
      FIRST_SUPERUSER_FULL_NAME: "Admin System"
      
      # CORS
      CORS_ORIGINS: http://localhost:3000,http://localhost:3001,http://localhost:3002
      
      # Logging
      LOG_LEVEL: INFO
      LOG_FILE: /app/backend.log
    depends_on:
      - db
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./shared:/app/shared
      - /app/__pycache__
    working_dir: /app
    command: >
      sh -c "python -m uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload"

  welcome-app:
    build:
      context: ./apps/welcome-app
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    container_name: welcome-app
    hostname: welcome-app
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://backend:8000
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - ecommerce-network
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  vendeur-app:
    build:
      context: .
      dockerfile: ./apps/vendeur-app/Dockerfile
    ports:
      - "3001:80"
    depends_on:
      - backend
    volumes:
      - ./shared:/app/shared
      - ./apps/vendeur-app:/app
      - /app/node_modules

  achteur-app:
    build:
      context: .
      dockerfile: ./apps/achteur-app/Dockerfile
      args:
        - NODE_ENV=development
    ports:
      - "3002:80"
    depends_on:
      - backend
    volumes:
      - ./shared:/app/shared
      - ./apps/achteur-app/src:/app/src
      - ./apps/achteur-app/public:/app/public
      - ./apps/achteur-app/package.json:/app/package.json
      - ./apps/achteur-app/tsconfig.json:/app/tsconfig.json
      - ./apps/achteur-app/tsconfig.node.json:/app/tsconfig.node.json
      - ./apps/achteur-app/tsconfig.app.json:/app/tsconfig.app.json
      - ./apps/achteur-app/vite.config.ts:/app/vite.config.ts
      - /app/node_modules
    environment:
      - NODE_ENV=development

volumes:
  db_data:
